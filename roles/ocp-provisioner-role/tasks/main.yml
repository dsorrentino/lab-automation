---
# tasks file for ocp-provisioner-role
- name: Install necessary packages
  yum:
    name: "{{ kni_required_packages }}"
    state: latest
- name: Configure user - kni
  include_tasks: configure_user_kni.yml
- name: Copy pull secret to kni user
  copy:
    content: "{{ pull_secret }}"
    dest: /home/kni/pull-secret.txt
    owner: kni
    group: kni
    mode: '0600'
    backup: no
    force: yes
- name: Create directory (/home/kni/{{ item }})
  file:
    path: /home/kni/{{ item }}
    state: directory
    mode: '0755'
    owner: kni
    group: kni
  loop:
    - clusterconfigs
    - initialconfigs
    - logs
    - "{{ baremetal_tools }}"
    - "{{ helper_scripts }}"
- name: Copy helper scripts to kni user
  copy:
    src: "{{ item }}"
    dest: /home/kni/{{ helper_scripts }}/{{ item }}
    owner: kni
    group: kni
    mode: '0755'
    backup: no
    force: yes
  loop:
    - create_manifests.sh
    - create_cluster.sh
    - destroy_cluster.sh
    - change_cluster_ntp.sh
- name: Copy butane scripts
  template:
    src: "{{ item }}.j2"
    dest: /home/kni/{{ helper_scripts }}/{{ item }}
    owner: kni
    group: kni
    mode: '0600'
    backup: no
    force: yes
  loop:
    - 99-master-chrony-conf-override.bu
    - 99-worker-chrony-conf-override.bu
- name: Create baremetal tools
  include_tasks: baremetal_tools.yml
- name: Create basic script to retrieve the OpenShift Container Platform installer
  template:
    src: get_openshift.sh.j2
    dest: /home/kni/{{ helper_scripts }}/get_openshift.sh
    owner: kni
    group: kni
    mode: '0755'
    backup: no
    force: yes
- name: Get the kni user public key
  slurp:
    src: /home/kni/.ssh/id_rsa.pub
  register: kni_pub_key
- name: Create base install-config.yaml
  template:
    src: install-config.yaml.j2
    dest: /home/kni/{{ item }}/install-config.yaml
    owner: kni
    group: kni
    mode: '0644'
    backup: no
    force: yes
  loop:
    - initialconfigs
    - clusterconfigs
- name: Configure vibvirtd
  include_tasks: configure_libvird.yml
  when: configure_host.boolean.libvirt
- name: Add http service to firewalld
  ansible.posix.firewalld:
    service: http
    permanent: yes
    immediate: yes
    state: enabled
  when: configure_host.boolean.firewalld
