#!/usr/bin/env bash

LOG_FILE=~/logs/create_image_cache.$$.$(date +'%Y%m%d').log

log() {
  if [[ ! -r ${LOG_FILE} ]]
  then
    echo "[$(date)] Log file location: ${LOG_FILE}"
  fi
  echo "[$(date)] $@" | tee -a ${LOG_FILE}
}


EXTERNAL_BRIDGE={{ install_config.external_bridge }}

# Install podman:
log "Installing podman."
sudo dnf install -y podman

# Open firewall port 8080 to be used for RHCOS image caching:
log "Configuring the firewall to serve the image."
sudo firewall-cmd --add-port=8080/tcp --zone=public --permanent
sudo firewall-cmd --reload

# Create a directory to store the bootstraposimage:
log "Creating directory to store the image: /home/kni/rhcos_image_cache"
mkdir /home/kni/rhcos_image_cache

# Set the appropriate SELinux context for the newly created directory:
log "Configuring SELinux on directory."
sudo semanage fcontext -a -t httpd_sys_content_t "/home/kni/rhcos_image_cache(/.*)?"
sudo restorecon -Rv /home/kni/rhcos_image_cache/

# Get the URI for the RHCOS image that the installation program will deploy on the bootstrap VM:
log "Obtaining URI from openshift-baremetal-install."
export RHCOS_QEMU_URI=$(~/binaries/openshift-baremetal-install coreos print-stream-json | jq -r --arg ARCH "$(arch)" '.architectures[$ARCH].artifacts.qemu.formats["qcow2.gz"].disk.location')

# Get the name of the image that the installation program will deploy on the bootstrap VM:
log "Obtaining image name."
export RHCOS_QEMU_NAME=${RHCOS_QEMU_URI##*/}

# Get the SHA hash for the RHCOS image that will be deployed on the bootstrap VM:
log "Obtaining SHA for image."
export RHCOS_QEMU_UNCOMPRESSED_SHA256=$(~/binaries/openshift-baremetal-install coreos print-stream-json | jq -r --arg ARCH "$(arch)" '.architectures[$ARCH].artifacts.qemu.formats["qcow2.gz"].disk["uncompressed-sha256"]')

# Download the image and place it in the /home/kni/rhcos_image_cache directory:
log "Downloaind image."
curl -L ${RHCOS_QEMU_URI} -o /home/kni/rhcos_image_cache/${RHCOS_QEMU_NAME}

# Confirm SELinux type is of httpd_sys_content_t for the new file:
log "Confirm SELinux context."
log "$(ls -Z /home/kni/rhcos_image_cache)"

# Create the pod:
log "Creating the pod to serve the image."
podman run -d --name rhcos_image_cache -v /home/kni/rhcos_image_cache:/var/www/html -p 8080:8080/tcp quay.io/centos7/httpd-24-centos7:latest

# Creates a caching webserver with the name rhcos_image_cache. This pod serves the bootstrapOSImage image in the install-config.yaml file for deployment.

# Generate the bootstrapOSImage configuration:

export BAREMETAL_IP=$(ip addr show dev ${EXTERNAL_BRIDGE} | awk '/inet /{print $2}' | cut -d"/" -f1)
export BOOTSTRAP_OS_IMAGE="http://${BAREMETAL_IP}:8080/${RHCOS_QEMU_NAME}?sha256=${RHCOS_QEMU_UNCOMPRESSED_SHA256}"
log "Bootstrap OS Image config:"
log "    bootstrapOSImage=${BOOTSTRAP_OS_IMAGE}"

# Add the required configuration to the install-config.yaml file under platform.baremetal:

log "Backing up ~/initialconfigs/install-config.yaml"
cp -p ~/initialconfigs/install-config.yaml ~/initialconfigs/install-config.yaml.$(date +'%Y%m%d-%H%M')
log "Updating ~/initialconfigs/install-config.yaml with bootstrapOSImage information."
sed -i "/^  baremetal:.*/a \    bootstrapOSImage: ${BOOTSTRAP_OS_IMAGE}" ~/initialconfigs/install-config.yaml